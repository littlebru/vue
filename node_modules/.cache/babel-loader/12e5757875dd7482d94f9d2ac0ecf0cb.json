{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nvar _hoisted_1 = {\n  id: \"usuario\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.usuarios, function (usuario, index) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(usuario.nome), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;EACSA,EAAE,EAAC;AAAS;;uBAAjBC,oBAIM,OAJNC,UAIM,GAHFC,oBAEK,gCADDF,oBAA2EG,6BAA5CC,cAAQ,YAA3BC,OAAO,EAAEC,KAAK;yBAA1BN,oBAA2E;MAAjCO,GAAG,EAAED;IAAK,oBAAID,OAAO,CAACG,IAAI","names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","$data","usuario","index","key","nome"],"sourceRoot":"","sources":["/workspace/vue/src/views/UsuarioView.vue"],"sourcesContent":["<template>\r\n    <div id=\"usuario\">\r\n        <ul>\r\n            <li v-for=\"(usuario, index) in usuarios\" :key=\"index\">{{usuario.nome}}</li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport axios from 'axios'\r\nimport {mapState} from 'vuex'\r\n\r\nexport default {\r\n    name: 'usuarioView',\r\n    data() {\r\n        return {\r\n            usuarios: [{nome: 'Teste'}, {nome: 'Teste2'}]\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState(['token'])\r\n    },\r\n    methods: {\r\n        atualizar() {\r\n            axios.get('usuario',\r\n                { \r\n                    headers: {\r\n                        Authorization: this.token\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    this.usuarios = res.data;\r\n                })\r\n                .catch(error => { console.log(error) });\r\n        }\r\n    },\r\n    created() {\r\n        this.atualizar();\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}